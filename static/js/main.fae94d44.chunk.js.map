{"version":3,"sources":["config.js","KanbanScreen/kanbanActions.js","utils.js","KanbanScreen/kanbanReducer.js","reducers.js","store.js","components/Card/styles.js","components/IconButton/styles.js","components/IconButton/index.js","components/Card/index.js","components/Column/styles.js","components/Column/index.js","KanbanScreen/styles.js","KanbanScreen/index.js","KanbanScreen/HeaderKanban.js","App.js","serviceWorker.js","index.js"],"names":["themeConfig","primaryColor","secondaryColor","tertiaryColor","kanbanColumns","TO_DO","type","text","color","IN_PROGRESS","DONE","ActionTypes","ActionCreators","addCardAction","cardType","editCardAction","cardId","deleteCardAction","editCardTypeAction","saveCurrentCardIdAction","addCard","cards","id","uuid","editCard","map","card","deleteCard","filter","editCardType","initialState","currentCardId","combineReducers","kanbanReducer","state","action","persistConfig","key","storage","persistedReducer","persistReducer","reducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Card","styled","div","lighten","Paragraph","p","IconButtonWrapper","TextArea","textarea","IconButton","button","children","onClick","onEdit","onDelete","handleOnDragStart","React","useState","isEdit","setIsEdit","draggable","onDragStart","onDoubleClick","cursor","size","defaultValue","onBlur","e","target","value","rows","maxLength","Column","Header","Heading","h2","heading","dataTransfer","setData","onDrop","preventDefault","currentTarget","onDragOver","length","debounce","KanbanScreen","Title","h1","props","theme","ColumnWrapper","SearchWrapper","SearchIcon","FaSearch","SearchInput","input","HeaderKanban","onSearch","isSearchFocused","setIsSearchFocused","themeContext","useContext","ThemeContext","placeholder","onChange","onFocus","connect","dispatch","bindActionCreators","searchedResult","setSearchedResult","useEffect","clearTimeout","query","setTimeout","toLowerCase","includes","Object","entries","App","loading","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fae94d44.chunk.js","sourcesContent":["export const themeConfig = {\n  primaryColor: '#1a91db',\n  secondaryColor: '#e12a5a',\n  tertiaryColor: '#102540',\n};\n\nexport const kanbanColumns = {\n  TO_DO: { type: 'TO_DO', text: 'To Do', color: themeConfig.primaryColor },\n  IN_PROGRESS: { type: 'IN_PROGRESS', text: 'In Progress', color: themeConfig.secondaryColor },\n  DONE: { type: 'DONE', text: 'Done', color: themeConfig.tertiaryColor },\n};\n","export const ActionTypes = {\n  ADD_CARD: 'ADD_CARD',\n  EDIT_CARD: 'EDIT_CARD',\n  DELETE_CARD: 'DELETE_CARD',\n  EDIT_CARD_TYPE: 'EDIT_CARD_TYPE',\n  SAVE_CURRENT_CARD_ID: 'SAVE_CURRENT_CARD_ID',\n};\n\nexport const ActionCreators = {\n  addCardAction: (cardType) => ({\n    type: ActionTypes.ADD_CARD,\n    cardType,\n  }),\n  editCardAction: (cardId, text) => ({\n    type: ActionTypes.EDIT_CARD,\n    cardId,\n    text,\n  }),\n  deleteCardAction: (cardId) => ({\n    type: ActionTypes.DELETE_CARD,\n    cardId,\n  }),\n  editCardTypeAction: (cardType) => ({\n    type: ActionTypes.EDIT_CARD_TYPE,\n    cardType,\n  }),\n  saveCurrentCardIdAction: (cardId) => ({\n    type: ActionTypes.SAVE_CURRENT_CARD_ID,\n    cardId,\n  }),\n};\n","import { v4 as uuid } from 'uuid';\n\nexport const addCard = (cards, type) => [\n  ...cards,\n  {\n    id: uuid(),\n    type,\n    text: 'Enter text...',\n  },\n];\n\nexport const editCard = (cards, cardId, text) => cards.map((card) => (card.id === cardId ? { ...card, text } : card));\n\nexport const deleteCard = (cards, cardId) => cards.filter((card) => card.id !== cardId);\n\nexport const editCardType = (cards, cardId, type) =>\n  cards.map((card) => (card.id === cardId ? { ...card, type } : card));\n","import { ActionTypes } from './kanbanActions';\nimport { v4 as uuid } from 'uuid';\n// functions\nimport { addCard, editCard, deleteCard, editCardType } from '../utils';\n\nconst initialCards = [\n  { id: uuid(), type: 'TO_DO', text: 'Review request for proposal ' },\n  { id: uuid(), type: 'IN_PROGRESS', text: 'Prepare for client meeting' },\n  { id: uuid(), type: 'DONE', text: 'Test latest build' },\n  { id: uuid(), type: 'DONE', text: 'Update documentation' },\n];\n\nexport const initialState = {\n  cards: initialCards,\n  currentCardId: null,\n};\n\nexport default function kanbanReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_CARD: {\n      return {\n        ...state,\n        cards: addCard(state.cards, action.cardType),\n      };\n    }\n    case ActionTypes.EDIT_CARD: {\n      return {\n        ...state,\n        cards: editCard(state.cards, action.cardId, action.text),\n      };\n    }\n    case ActionTypes.DELETE_CARD: {\n      return {\n        ...state,\n        cards: deleteCard(state.cards, action.cardId),\n      };\n    }\n    case ActionTypes.EDIT_CARD_TYPE: {\n      return {\n        ...state,\n        cards: editCardType(state.cards, state.currentCardId, action.cardType),\n      };\n    }\n    case ActionTypes.SAVE_CURRENT_CARD_ID: {\n      return {\n        ...state,\n        currentCardId: action.cardId,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n/* reducers */\nimport kanbanReducer from './KanbanScreen/kanbanReducer';\n\nexport default combineReducers({\n  kanbanReducer,\n});\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n/* reducers */\nimport reducers from './reducers.js';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst appReducer = (state, action) => {\n  return reducers(state, action);\n};\n\nconst persistedReducer = persistReducer(persistConfig, appReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\nexport const persistor = persistStore(store);\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Card = styled.div`\n  width: 70%;\n  height: 120px;\n  box-shadow: 0px 3px 7px rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0;\n  background-color: ${({ color }) => lighten(0.15, color)};\n  position: relative;\n  cursor: grab;\n  padding: 5px;\n`;\n\nexport const Paragraph = styled.p`\n  text-align: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  display: none;\n\n  ${Card}:hover & {\n    display: block;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  border-width: 0px;\n  border: none;\n  background-color: transparent;\n  background-color: ${({ color }) => lighten(0.3, color)};\n  color: white;\n  font-size: 14px;\n`;\n","import styled from 'styled-components';\n\nexport const IconButton = styled.button`\n  border: none;\n  margin: 0;\n  padding: 0;\n  width: auto;\n  overflow: visible;\n  background: transparent;\n  color: inherit;\n  font: inherit;\n  &:focus {\n    outline: none;\n  }\n`;\n","import React from 'react';\n// Styles\nimport * as S from './styles';\n\nconst IconButton = ({ children, onClick }) => {\n  return <S.IconButton onClick={onClick}>{children}</S.IconButton>;\n};\n\nexport default IconButton;\n","import React from 'react';\nimport { FaRegWindowClose } from 'react-icons/fa';\n// Styles\nimport * as S from './styles';\n// Components\nimport IconButton from '../IconButton';\n\nconst Card = ({ card, color, onEdit, onDelete, handleOnDragStart }) => {\n  const [isEdit, setIsEdit] = React.useState(false);\n\n  const handleOnBlur = (e) => {\n    onEdit(card.id, e.target.value);\n    setIsEdit(false);\n  };\n\n  const handleOnDelete = () => {\n    onDelete(card.id);\n  };\n\n  const handleOnDoubleClick = () => {\n    setIsEdit(!isEdit);\n  };\n\n  return (\n    <S.Card\n      draggable=\"true\"\n      id={card.id}\n      onDragStart={handleOnDragStart}\n      color={color}\n      onDoubleClick={handleOnDoubleClick}\n    >\n      <S.IconButtonWrapper>\n        <IconButton onClick={handleOnDelete}>\n          <FaRegWindowClose cursor=\"pointer\" size={18} />\n        </IconButton>\n      </S.IconButtonWrapper>\n      {isEdit ? (\n        <S.TextArea defaultValue={card.text} onBlur={handleOnBlur} rows={4} maxLength={80} color={color} />\n      ) : (\n        <S.Paragraph>{card.text}</S.Paragraph>\n      )}\n    </S.Card>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${({ color }) => lighten(0.4, color)};\n  width: 33%;\n  margin: 0 3px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    border-bottom: 5px solid white;\n  }\n`;\n\nexport const Header = styled.div`\n  background-color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  flex-direction: column;\n  border-bottom: 5px solid white;\n  position: relative;\n`;\n\nexport const Heading = styled.h2`\n  margin-bottom: 0;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  position: absolute;\n  right: 10px;\n`;\n","import React from 'react';\nimport { FaPlus } from 'react-icons/fa';\n// Components\nimport Card from '../Card';\nimport IconButton from '../IconButton';\n// Styles\nimport * as S from './styles';\n\nconst Column = ({\n  cards,\n  heading,\n  color,\n  addCardAction,\n  editCardAction,\n  deleteCardAction,\n  type,\n  editCardTypeAction,\n  saveCurrentCardIdAction,\n}) => {\n  const handleOnDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleOnDragStart = (e) => {\n    e.dataTransfer.setData('text', e.target.id);\n    saveCurrentCardIdAction(e.target.id);\n  };\n\n  const handleOnDrop = (e) => {\n    e.preventDefault();\n    editCardTypeAction(e.currentTarget.id);\n  };\n\n  return (\n    <S.Column color={color} id={type} onDrop={handleOnDrop} onDragOver={handleOnDragOver}>\n      <S.Header color={color}>\n        <S.Heading>{heading}</S.Heading>\n        <p>({cards.length})</p>\n        <S.IconButtonWrapper>\n          <IconButton onClick={addCardAction}>\n            <FaPlus cursor=\"pointer\" />\n          </IconButton>\n        </S.IconButtonWrapper>\n      </S.Header>\n      {cards.map((card) => (\n        <Card\n          key={card.id}\n          card={card}\n          color={color}\n          onEdit={editCardAction}\n          onDelete={deleteCardAction}\n          handleOnDragStart={handleOnDragStart}\n        />\n      ))}\n    </S.Column>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\nimport { FaSearch } from 'react-icons/all';\n\nexport const KanbanScreen = styled.div`\n  width: 70%;\n  margin: 0 auto;\n\n  @media (max-width: 992px) {\n    width: 80%;\n  }\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: ${(props) => props.theme.tertiaryColor};\n`;\n\nexport const ColumnWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin: 5% auto;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    margin: 0 auto;\n  }\n`;\n\nexport const SearchWrapper = styled.div`\n  position: absolute;\n  right: 0;\n`;\n\nexport const SearchIcon = styled(FaSearch)`\n  position: relative;\n  right: -15px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 5px;\n  color: ${(props) => props.theme.tertiaryColor};\n  text-align: center;\n  cursor: pointer;\n  border-width: 0 0 2px 0;\n\n  &:focus {\n    outline: none;\n    border-bottom-color: ${(props) => props.theme.secondaryColor};\n  }\n`;\n\nexport const Header = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n// Actions\nimport { ActionCreators } from './kanbanActions';\n// Config\nimport { kanbanColumns } from '../config';\n// Components\nimport Column from '../components/Column';\nimport HeaderKanban from './HeaderKanban';\n// styles\nimport * as S from './styles';\n\nlet debounce;\n\nconst KanbanScreen = ({\n  cards,\n  addCardAction,\n  editCardAction,\n  deleteCardAction,\n  editCardTypeAction,\n  saveCurrentCardIdAction,\n}) => {\n  const [searchedResult, setSearchedResult] = useState(cards);\n\n  const getColumnCards = (type) => searchedResult.filter((card) => card.type === type);\n\n  useEffect(() => {\n    setSearchedResult(cards);\n  }, [cards]);\n\n  useEffect(() => {\n    return () => {\n      if (debounce) {\n        clearTimeout(debounce);\n      }\n    };\n  }, []);\n\n  const handleSearchCard = (e) => {\n    const query = e.target.value;\n    if (debounce) {\n      clearTimeout(debounce);\n    }\n    debounce = setTimeout(() => {\n      setSearchedResult(cards.filter((card) => card.text.toLowerCase().includes(query.toLowerCase())));\n    }, 500);\n  };\n\n  return (\n    <S.KanbanScreen>\n      <HeaderKanban onSearch={handleSearchCard} />\n      <S.ColumnWrapper>\n        {Object.entries(kanbanColumns).map(([key, value]) => {\n          return (\n            <Column\n              key={key}\n              type={value.type}\n              cards={getColumnCards(value.type)}\n              heading={value.text}\n              color={value.color}\n              addCardAction={() => addCardAction(value.type)}\n              editCardAction={editCardAction}\n              deleteCardAction={deleteCardAction}\n              editCardTypeAction={editCardTypeAction}\n              saveCurrentCardIdAction={saveCurrentCardIdAction}\n            />\n          );\n        })}\n      </S.ColumnWrapper>\n    </S.KanbanScreen>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cards: state.kanbanReducer.cards,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addCardAction: ActionCreators.addCardAction,\n      editCardAction: ActionCreators.editCardAction,\n      deleteCardAction: ActionCreators.deleteCardAction,\n      editCardTypeAction: ActionCreators.editCardTypeAction,\n      saveCurrentCardIdAction: ActionCreators.saveCurrentCardIdAction,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanScreen);\n","import React, { useContext, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\n// styles\nimport * as S from './styles';\n\nconst HeaderKanban = ({ onSearch }) => {\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n  const themeContext = useContext(ThemeContext);\n\n  const handleOnFocus = () => setIsSearchFocused(true);\n\n  const handleOnBlur = () => setIsSearchFocused(false);\n\n  return (\n    <S.Header>\n      <S.Title>Kanban Board</S.Title>\n      <S.SearchWrapper>\n        <S.SearchIcon color={isSearchFocused ? themeContext.secondaryColor : themeContext.tertiaryColor} size={14} />\n        <S.SearchInput placeholder=\"Search cards\" onChange={onSearch} onFocus={handleOnFocus} onBlur={handleOnBlur} />\n      </S.SearchWrapper>\n    </S.Header>\n  );\n};\n\nexport default HeaderKanban;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ThemeProvider } from 'styled-components';\n// theme\nimport { themeConfig } from './config';\n// store\nimport { store, persistor } from './store';\n// screen\nimport KanbanScreen from './KanbanScreen';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={themeConfig}>\n          <KanbanScreen />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}